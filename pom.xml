<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>spring-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- tag::actuator[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- end::actuator[] -->

		<!-- tag::tests[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- end::tests[] -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--с помощью мавен плагина(com.spotify:docker-maven-plugin) создаём образ (генерация Dockerfile по параметрам конфигурацию плагина) (Dockerfile вместе с jar перемещяються в папку target/docker/)-->
			<!--Setting Docker set enabled "Expose daemon on tcp://localhost:2375 without TLS"-->
<!--			<plugin>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>0.4.5</version>-->

<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->

<!--				<configuration>-->
<!--					<imageName>valyadksbot/valya</imageName>-->
<!--					<baseImage>adoptopenjdk/openjdk11:jre-11.0.7_10-alpine</baseImage>-->
<!--					<imageTags>${project.version}</imageTags>-->
<!--					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>-->
<!--					<resources>-->
<!--						<resource>-->
<!--							<targetPath>/</targetPath>-->
<!--							<directory>${project.build.directory}</directory>-->
<!--							<include>${project.build.finalName}.jar</include>-->
<!--						</resource>-->
<!--					</resources>-->

<!--				</configuration>-->
<!--				<dependencies>-->
<!--					<dependency>-->
<!--						<groupId>javax.activation</groupId>-->
<!--						<artifactId>javax.activation-api</artifactId>-->
<!--						<version>1.2.0</version>-->
<!--						<scope>compile</scope>-->
<!--					</dependency>-->
<!--				</dependencies>-->
<!--			</plugin>-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<!--phase:validate. Перемещаем src/main/docker/ в target/docker-->
				<executions>
					<execution>
						<id>docker-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
<!--							<outputDirectory>target/docker</outputDirectory>-->
							<outputDirectory>target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!--phase:package. Копируем target/${project.build.finalName}.jar в target/docker/-->
<!--					<execution>-->
<!--						<id>jar-resources</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>copy-resources</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<outputDirectory>target/docker</outputDirectory>-->
<!--							<resources>-->
<!--								<resource>-->
<!--									<directory>target</directory>-->
<!--									<filtering>true</filtering>-->
<!--									<includes>-->
<!--										<include>${project.build.finalName}.jar</include>-->
<!--									</includes>-->
<!--								</resource>-->
<!--							</resources>-->
<!--						</configuration>-->
<!--					</execution>-->
				</executions>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-jar-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--				<configuration>-->
<!--					<outputDirectory>target/docker</outputDirectory>-->
<!--					<archive>-->
<!--						<manifest>-->
<!--							<addClasspath>true</addClasspath>-->
<!--							<classpathPrefix>lib/</classpathPrefix>-->
<!--							<mainClass>com.example.springboot.Application</mainClass>-->
<!--						</manifest>-->
<!--					</archive>-->
<!--				</configuration>-->
<!--			</plugin>-->

			<!--phase:package. Создаём docker образ на базе target/docker/dockerfile-->
			<!--Setting Docker set enabled "Expose daemon on tcp://localhost:2375 without TLS"-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-plugin.version}</version>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<tag>${project.version}</tag>
					<repository>valyadksbot/valya</repository>
<!--					<contextDirectory>${project.build.directory}/docker</contextDirectory>-->
					<contextDirectory>${project.build.directory}</contextDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>javax.activation-api</artifactId>
						<version>1.2.0</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>

	</build>

</project>
